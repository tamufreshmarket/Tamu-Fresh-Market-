// src/components/ui/card.tsx "use client";

import * as React from "react"; import { cn } from "@/lib/utils";

const Card = React.forwardRef< HTMLDivElement, React.HTMLAttributes<HTMLDivElement> & { variant?: "default" | "outline"; size?: "sm" | "md" | "lg"; }

> (({ className, variant = "default", size = "md", ...props }, ref) => { const baseStyle = "rounded-2xl shadow-sm bg-white"; const variantStyles = { default: "border border-gray-200", outline: "border-2 border-gray-300", }; const sizeStyles = { sm: "p-4", md: "p-6", lg: "p-8", };



return ( <div ref={ref} className={cn(baseStyle, variantStyles[variant], sizeStyles[size], className)} {...props} /> ); }); Card.displayName = "Card";

const CardHeader = React.forwardRef< HTMLDivElement, React.HTMLAttributes<HTMLDivElement>

> (({ className, ...props }, ref) => (



  <div
    ref={ref}
    className={cn("border-b px-4 py-2 font-semibold text-lg", className)}
    {...props}
  />
));
CardHeader.displayName = "CardHeader";const CardTitle = React.forwardRef< HTMLHeadingElement, React.HTMLAttributes<HTMLHeadingElement>

> (({ className, ...props }, ref) => (



  <h3
    ref={ref}
    className={cn("text-xl font-semibold leading-none tracking-tight", className)}
    {...props}
  />
));
CardTitle.displayName = "CardTitle";const CardDescription = React.forwardRef< HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>

> (({ className, ...props }, ref) => (



  <p
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
));
CardDescription.displayName = "CardDescription";const CardContent = React.forwardRef< HTMLDivElement, React.HTMLAttributes<HTMLDivElement>

> (({ className, ...props }, ref) => (



  <div ref={ref} className={cn("p-4", className)} {...props} />
));
CardContent.displayName = "CardContent";const CardFooter = React.forwardRef< HTMLDivElement, React.HTMLAttributes<HTMLDivElement>

> (({ className, ...props }, ref) => (



  <div ref={ref} className={cn("flex items-center p-4 border-t", className)} {...props} />
));
CardFooter.displayName = "CardFooter";export { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter };

